#!/bin/bash

DIR=$(cd $(dirname $0) ; pwd -P)

set -o pipefail
set -e
set -u

PROXY_NAME=istio-proxy

function usage() {
    echo "Usage: $0 [-p <SHA of proxy>] [-g <SHA of gn>]"
    echo
    exit 0
}

while getopts ":i:g:" opt; do
  case ${opt} in
    i) SHA="${OPTARG}";;
    g) GN_SHA="${OPTARG}";;
    *) usage;;
  esac
done

SHA=${SHA:-"$(grep '%global git_commit ' ${PROXY_NAME}.spec | cut -d' ' -f3)"}
GN_SHA=${GN_SHA:-"$(grep '%global gn_commit ' ${PROXY_NAME}.spec | cut -d' ' -f3)"}

function update_commit() {
    local name="$1"
    local commit="$2"
    local sha="$3"
    local tarball="$4"

    local filename="$(echo $tarball | sed -s 's+^.*/++')"

    echo -n "Checking ${name}...   "
    if [ ! -f "${filename}" ]; then
        echo "Downloading ${tarball}"
        if ! curl -Lfs "${tarball}" -o "${filename}"; then
            echo "Error downloading tarball, exiting."
            exit 1
        fi
    else
        echo "Already on disk, download not necessary"
    fi

    sed -i "s/%global ${commit} .*/%global ${commit} ${sha}/" "${PROXY_NAME}.spec"
}

update_commit "proxy" "git_commit" "${SHA}" "https://github.com/maistra/proxy/archive/${SHA}/proxy-${SHA}.tar.gz"
update_commit "gn" "gn_commit" "${GN_SHA}" "https://gn.googlesource.com/gn/+archive/${GN_SHA}.tar.gz"

GN_GIT_SOURCE="${DIR}/${GN_SHA}.tar.gz"
GN_DIR="${DIR}/gn"
rm -rf ${GN_DIR}
mkdir -p ${GN_DIR}
(
  cd ${GN_DIR}
  tar xf ${GN_GIT_SOURCE}
  mkdir out
  cat - > out/last_commit_position.h << EOF
// Generated by build/gen.py.

#ifndef OUT_LAST_COMMIT_POSITION_H_
#define OUT_LAST_COMMIT_POSITION_H_

#define LAST_COMMIT_POSITION_NUM 0
#define LAST_COMMIT_POSITION "0 ($GN_SHA)"

#endif  // OUT_LAST_COMMIT_POSITION_H_
EOF
)

(
  cd "${DIR}"
  GN_SOURCE="gn-${SHA}.tar.gz"
  rm -f ${GN_SOURCE}
  tar zcf "${GN_SOURCE}" "gn"

  MD5=$(md5sum "${GN_SOURCE}" | awk '{print $1}')
  mv ${GN_SOURCE} gn-${MD5}.tar.gz
  sed -i "s/%global gn_hash .*/%global gn_hash ${MD5}/" "${PROXY_NAME}.spec"

  md5sum "proxy-${SHA}.tar.gz" "gn-${MD5}.tar.gz" > sources
)
